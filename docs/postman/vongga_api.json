{
	"info": {
		"_postman_id": "e5ca7a86-a5c4-4d9a-82ef-9f01e2e48cc5",
		"name": "Vongga Platform Copy",
		"description": "API collection for Vongga Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21232087"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Verify Token Firebase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.accessToken) {",
									"    pm.environment.set(\"access_token\", jsonData.accessToken);",
									"}",
									"if (jsonData.refreshToken) {",
									"    pm.environment.set(\"refresh_token\", jsonData.refreshToken);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    pm.expect(jsonData.accessToken).to.exist;",
									"});",
									"",
									"pm.test(\"Response has refresh token\", function () {",
									"    pm.expect(jsonData.refreshToken).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firebaseToken\": \"your_firebase_token\"}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verifyTokenFirebase",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"verifyTokenFirebase"
							]
						},
						"description": "Login with Firebase token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.accessToken) {",
									"    pm.environment.set(\"accessToken\", jsonData.access_token);",
									"}",
									"if (jsonData.refreshToken) {",
									"    pm.environment.set(\"refreshToken\", jsonData.refresh_token);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has new access token\", function () {",
									"    pm.expect(jsonData.access_token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Get a new access token using refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.unset(\"access_token\");",
									"    pm.environment.unset(\"refresh_token\");",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Tokens are cleared\", function () {",
									"    pm.expect(pm.environment.get(\"access_token\")).to.be.undefined;",
									"    pm.expect(pm.environment.get(\"refresh_token\")).to.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate the current session"
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"John\",\n\t\"lastName\": \"Doe\",\n\t\"photoUrl\": \"https://example.com/photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create or update a user profile based on Firebase user data"
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						},
						"description": "Get the current user's profile"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"John\",\n\t\"lastName\": \"Doe\",\n\t\"username\": \"johndoe\",\n\t\"bio\": \"Software Developer\",\n\t\"avatar\": \"https://example.com/avatar.jpg\",\n\t\"photoProfile\": \"https://example.com/profile.jpg\",\n\t\"photoCover\": \"https://example.com/cover.jpg\",\n\t\"dateOfBirth\": \"1990-01-01T00:00:00Z\",\n\t\"gender\": \"male\",\n\t\"interestedIn\": [\"female\"],\n\t\"location\": {\n\t\t\"type\": \"Point\",\n\t\t\"coordinates\": [100.5018, 13.7563],\n\t\t\"placeName\": \"Bangkok\"\n\t},\n\t\"relationStatus\": \"single\",\n\t\"height\": 175.5,\n\t\"interests\": [\"coding\", \"reading\"],\n\t\"occupation\": \"Software Engineer\",\n\t\"education\": \"Bachelor's Degree\",\n\t\"phoneNumber\": \"+66123456789\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Update user profile with optional fields"
					},
					"response": []
				},
				{
					"name": "Get User By Username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/username/:username",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"username",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "johndoe"
								}
							]
						},
						"description": "Get a user's profile by username"
					},
					"response": []
				},
				{
					"name": "Check Username Availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/check-username/:username",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"check-username",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "johndoe"
								}
							]
						},
						"description": "Check if a username is available"
					},
					"response": []
				}
			]
		},
		{
			"name": "Follow",
			"item": [
				{
					"name": "Follow User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user to follow"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user to unfollow"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/followers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								"followers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Following",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/following",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								"following"
							]
						}
					},
					"response": []
				},
				{
					"name": "Block User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/block/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								"block",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user to block"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unblock User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/follow/block/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"follow",
								"block",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user to unblock"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Friendship",
			"item": [
				{
					"name": "Send Friend Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship/request/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship",
								"request",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user to send friend request"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept Friend Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship/accept/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship",
								"accept",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user whose friend request to accept"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject Friend Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship/reject/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship",
								"reject",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of user whose friend request to reject"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Friend",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "",
									"description": "ID of friend to remove"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Friends",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Friend Requests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/friendship/requests",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"friendship",
								"requests"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "SubPosts",
					"item": [
						{
							"name": "Create SubPost",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\": \"This is a subpost\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/image.jpg\"\n\t\t}\n\t],\n\t\"order\": 1\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/posts/:postId/subposts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										":postId",
										"subposts"
									],
									"variable": [
										{
											"key": "postId",
											"value": "post_id_here"
										}
									]
								},
								"description": "Create a new subpost under a post"
							},
							"response": []
						},
						{
							"name": "Update SubPost",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\": \"Updated subpost content\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/updated-image.jpg\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/posts/subposts/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										"subposts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "subpost_id_here"
										}
									]
								},
								"description": "Update an existing subpost"
							},
							"response": []
						},
						{
							"name": "Delete SubPost",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/posts/subposts/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										"subposts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "subpost_id_here"
										}
									]
								},
								"description": "Delete a subpost"
							},
							"response": []
						},
						{
							"name": "Get SubPost",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/posts/subposts/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										"subposts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "subpost_id_here"
										}
									]
								},
								"description": "Get a specific subpost"
							},
							"response": []
						},
						{
							"name": "List SubPosts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/posts/:postId/subposts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										":postId",
										"subposts"
									],
									"variable": [
										{
											"key": "postId",
											"value": "post_id_here"
										}
									]
								},
								"description": "List all subposts of a post"
							},
							"response": []
						},
						{
							"name": "Reorder SubPosts",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orders\": {\n\t\t\"subpost_id_1\": 1,\n\t\t\"subpost_id_2\": 2,\n\t\t\"subpost_id_3\": 3\n\t}\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/posts/:postId/subposts/reorder",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										":postId",
										"subposts",
										"reorder"
									],
									"variable": [
										{
											"key": "postId",
											"value": "post_id_here"
										}
									]
								},
								"description": "Reorder subposts of a post"
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"This is a test post\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/image.jpg\"\n\t\t}\n\t],\n\t\"tags\": [\"test\", \"example\"],\n\t\"location\": {\n\t\t\"type\": \"Point\",\n\t\t\"coordinates\": [100.5018, 13.7563],\n\t\t\"placeName\": \"Bangkok\"\n\t},\n\t\"visibility\": \"public\",\n\t\"subPosts\": [\n\t\t{\n\t\t\t\"content\": \"This is subpost 1\",\n\t\t\t\"media\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"image\",\n\t\t\t\t\t\"url\": \"https://example.com/subpost1.jpg\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"order\": 1\n\t\t},\n\t\t{\n\t\t\t\"content\": \"This is subpost 2\",\n\t\t\t\"media\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"image\",\n\t\t\t\t\t\"url\": \"https://example.com/subpost2.jpg\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"order\": 2\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts"
							]
						},
						"description": "Create a new post"
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Updated post content\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/updated-image.jpg\"\n\t\t}\n\t],\n\t\"tags\": [\"updated\", \"test\"],\n\t\"location\": {\n\t\t\"type\": \"Point\",\n\t\t\"coordinates\": [100.5018, 13.7563],\n\t\t\"placeName\": \"Bangkok\"\n\t},\n\t\"visibility\": \"public\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "post_id_here"
								}
							]
						},
						"description": "Update an existing post"
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "post_id_here"
								}
							]
						},
						"description": "Delete a post"
					},
					"response": []
				},
				{
					"name": "Get Post",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/:id?includeSubPosts=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								":id"
							],
							"query": [
								{
									"key": "includeSubPosts",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "676b463df8e64d3ff04d8615"
								}
							]
						},
						"description": "Get a post by ID"
					},
					"response": [
						{
							"name": "Get Post",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/posts/:id?includeSubPosts=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts",
										":id"
									],
									"query": [
										{
											"key": "includeSubPosts",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "676b463df8e64d3ff04d8615"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 25 Dec 2024 00:18:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1279"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"676b463df8e64d3ff04d8615\",\n    \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n    \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n    \"isActive\": true,\n    \"version\": 1,\n    \"userId\": \"67694aaeec1886f9f9ba85ed\",\n    \"content\": \"This is a test post5\",\n    \"media\": [\n        {\n            \"type\": \"image\",\n            \"url\": \"https://example.com/image.jpg\",\n            \"size\": 0\n        }\n    ],\n    \"reactionCounts\": {},\n    \"commentCount\": 0,\n    \"subPostCount\": 2,\n    \"tags\": [\n        \"test\",\n        \"example\"\n    ],\n    \"location\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            100.5018,\n            13.7563\n        ],\n        \"placeName\": \"Bangkok\"\n    },\n    \"visibility\": \"public\",\n    \"shareCount\": 0,\n    \"viewCount\": 0,\n    \"isEdited\": false,\n    \"editHistory\": [],\n    \"subPosts\": [\n        {\n            \"id\": \"676b463df8e64d3ff04d8617\",\n            \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n            \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n            \"isActive\": true,\n            \"version\": 1,\n            \"parentId\": \"676b463df8e64d3ff04d8615\",\n            \"userId\": \"67694aaeec1886f9f9ba85ed\",\n            \"content\": \"This is subpost 1\",\n            \"media\": [\n                {\n                    \"type\": \"image\",\n                    \"url\": \"https://example.com/subpost1.jpg\",\n                    \"size\": 0\n                }\n            ],\n            \"reactionCounts\": {},\n            \"commentCount\": 0,\n            \"order\": 1\n        },\n        {\n            \"id\": \"676b463df8e64d3ff04d8619\",\n            \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n            \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n            \"isActive\": true,\n            \"version\": 1,\n            \"parentId\": \"676b463df8e64d3ff04d8615\",\n            \"userId\": \"67694aaeec1886f9f9ba85ed\",\n            \"content\": \"This is subpost 2\",\n            \"media\": [\n                {\n                    \"type\": \"image\",\n                    \"url\": \"https://example.com/subpost2.jpg\",\n                    \"size\": 0\n                }\n            ],\n            \"reactionCounts\": {},\n            \"commentCount\": 0,\n            \"order\": 2\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts?limit=10&offset=0&userId=67694aaeec1886f9f9ba85ed&includeSubPosts=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "userId",
									"value": "67694aaeec1886f9f9ba85ed"
								},
								{
									"key": "includeSubPosts",
									"value": "true"
								}
							]
						},
						"description": "List posts with pagination"
					},
					"response": [
						{
							"name": "List Posts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/posts?limit=10&offset=0&userId=67694aaeec1886f9f9ba85ed&includeSubPosts=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"posts"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "userId",
											"value": "67694aaeec1886f9f9ba85ed"
										},
										{
											"key": "includeSubPosts",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 25 Dec 2024 00:20:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "6398"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"676b463df8e64d3ff04d8615\",\n        \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n        \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n        \"isActive\": true,\n        \"version\": 1,\n        \"userId\": \"67694aaeec1886f9f9ba85ed\",\n        \"content\": \"This is a test post5\",\n        \"media\": [\n            {\n                \"type\": \"image\",\n                \"url\": \"https://example.com/image.jpg\",\n                \"size\": 0\n            }\n        ],\n        \"reactionCounts\": {},\n        \"commentCount\": 0,\n        \"subPostCount\": 2,\n        \"tags\": [\n            \"test\",\n            \"example\"\n        ],\n        \"location\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                100.5018,\n                13.7563\n            ],\n            \"placeName\": \"Bangkok\"\n        },\n        \"visibility\": \"public\",\n        \"shareCount\": 0,\n        \"viewCount\": 0,\n        \"isEdited\": false,\n        \"editHistory\": [],\n        \"subPosts\": [\n            {\n                \"id\": \"676b463df8e64d3ff04d8617\",\n                \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n                \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b463df8e64d3ff04d8615\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 1\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost1.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 1\n            },\n            {\n                \"id\": \"676b463df8e64d3ff04d8619\",\n                \"createdAt\": \"2024-12-24T23:39:41.281Z\",\n                \"updatedAt\": \"2024-12-24T23:39:41.281Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b463df8e64d3ff04d8615\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 2\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost2.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 2\n            }\n        ]\n    },\n    {\n        \"id\": \"676b4630f8e64d3ff04d860f\",\n        \"createdAt\": \"2024-12-24T23:39:28.343Z\",\n        \"updatedAt\": \"2024-12-24T23:39:28.343Z\",\n        \"isActive\": true,\n        \"version\": 1,\n        \"userId\": \"67694aaeec1886f9f9ba85ed\",\n        \"content\": \"This is a test post5\",\n        \"media\": [\n            {\n                \"type\": \"image\",\n                \"url\": \"https://example.com/image.jpg\",\n                \"size\": 0\n            }\n        ],\n        \"reactionCounts\": {},\n        \"commentCount\": 0,\n        \"subPostCount\": 2,\n        \"tags\": [\n            \"test\",\n            \"example\"\n        ],\n        \"location\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                100.5018,\n                13.7563\n            ],\n            \"placeName\": \"Bangkok\"\n        },\n        \"visibility\": \"public\",\n        \"shareCount\": 0,\n        \"viewCount\": 0,\n        \"isEdited\": false,\n        \"editHistory\": [],\n        \"subPosts\": [\n            {\n                \"id\": \"676b4630f8e64d3ff04d8611\",\n                \"createdAt\": \"2024-12-24T23:39:28.343Z\",\n                \"updatedAt\": \"2024-12-24T23:39:28.343Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b4630f8e64d3ff04d860f\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 1\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost1.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 1\n            },\n            {\n                \"id\": \"676b4630f8e64d3ff04d8613\",\n                \"createdAt\": \"2024-12-24T23:39:28.343Z\",\n                \"updatedAt\": \"2024-12-24T23:39:28.343Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b4630f8e64d3ff04d860f\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 2\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost2.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 2\n            }\n        ]\n    },\n    {\n        \"id\": \"676b462bf8e64d3ff04d8609\",\n        \"createdAt\": \"2024-12-24T23:39:23.417Z\",\n        \"updatedAt\": \"2024-12-24T23:39:23.417Z\",\n        \"isActive\": true,\n        \"version\": 1,\n        \"userId\": \"67694aaeec1886f9f9ba85ed\",\n        \"content\": \"This is a test post\",\n        \"media\": [\n            {\n                \"type\": \"image\",\n                \"url\": \"https://example.com/image.jpg\",\n                \"size\": 0\n            }\n        ],\n        \"reactionCounts\": {},\n        \"commentCount\": 0,\n        \"subPostCount\": 2,\n        \"tags\": [\n            \"test\",\n            \"example\"\n        ],\n        \"location\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                100.5018,\n                13.7563\n            ],\n            \"placeName\": \"Bangkok\"\n        },\n        \"visibility\": \"public\",\n        \"shareCount\": 0,\n        \"viewCount\": 0,\n        \"isEdited\": false,\n        \"editHistory\": [],\n        \"subPosts\": [\n            {\n                \"id\": \"676b462bf8e64d3ff04d860b\",\n                \"createdAt\": \"2024-12-24T23:39:23.417Z\",\n                \"updatedAt\": \"2024-12-24T23:39:23.417Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b462bf8e64d3ff04d8609\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 1\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost1.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 1\n            },\n            {\n                \"id\": \"676b462bf8e64d3ff04d860d\",\n                \"createdAt\": \"2024-12-24T23:39:23.417Z\",\n                \"updatedAt\": \"2024-12-24T23:39:23.417Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b462bf8e64d3ff04d8609\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 2\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost2.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 2\n            }\n        ]\n    },\n    {\n        \"id\": \"676b45eff8e64d3ff04d8603\",\n        \"createdAt\": \"2024-12-24T23:38:23.996Z\",\n        \"updatedAt\": \"2024-12-24T23:38:23.996Z\",\n        \"isActive\": true,\n        \"version\": 1,\n        \"userId\": \"67694aaeec1886f9f9ba85ed\",\n        \"content\": \"This is a test post\",\n        \"media\": [\n            {\n                \"type\": \"image\",\n                \"url\": \"https://example.com/image.jpg\",\n                \"size\": 0\n            }\n        ],\n        \"reactionCounts\": {},\n        \"commentCount\": 0,\n        \"subPostCount\": 2,\n        \"tags\": [\n            \"test\",\n            \"example\"\n        ],\n        \"location\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                100.5018,\n                13.7563\n            ],\n            \"placeName\": \"Bangkok\"\n        },\n        \"visibility\": \"public\",\n        \"shareCount\": 0,\n        \"viewCount\": 0,\n        \"isEdited\": false,\n        \"editHistory\": [],\n        \"subPosts\": [\n            {\n                \"id\": \"676b45f0f8e64d3ff04d8605\",\n                \"createdAt\": \"2024-12-24T23:38:23.996Z\",\n                \"updatedAt\": \"2024-12-24T23:38:23.996Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b45eff8e64d3ff04d8603\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 1\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost1.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 1\n            },\n            {\n                \"id\": \"676b45f0f8e64d3ff04d8607\",\n                \"createdAt\": \"2024-12-24T23:38:23.996Z\",\n                \"updatedAt\": \"2024-12-24T23:38:23.996Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b45eff8e64d3ff04d8603\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 2\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost2.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 2\n            }\n        ]\n    },\n    {\n        \"id\": \"676b42852d236c3cc8cef8e2\",\n        \"createdAt\": \"2024-12-24T23:23:49.139Z\",\n        \"updatedAt\": \"2024-12-24T23:23:49.139Z\",\n        \"isActive\": true,\n        \"version\": 1,\n        \"userId\": \"67694aaeec1886f9f9ba85ed\",\n        \"content\": \"This is a test post\",\n        \"media\": [\n            {\n                \"type\": \"image\",\n                \"url\": \"https://example.com/image.jpg\",\n                \"size\": 0\n            }\n        ],\n        \"reactionCounts\": {},\n        \"commentCount\": 0,\n        \"subPostCount\": 2,\n        \"tags\": [\n            \"test\",\n            \"example\"\n        ],\n        \"location\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                100.5018,\n                13.7563\n            ],\n            \"placeName\": \"Bangkok\"\n        },\n        \"visibility\": \"public\",\n        \"shareCount\": 0,\n        \"viewCount\": 0,\n        \"isEdited\": false,\n        \"editHistory\": [],\n        \"subPosts\": [\n            {\n                \"id\": \"676b42852d236c3cc8cef8e4\",\n                \"createdAt\": \"2024-12-24T23:23:49.139Z\",\n                \"updatedAt\": \"2024-12-24T23:23:49.139Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b42852d236c3cc8cef8e2\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 1\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost1.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 1\n            },\n            {\n                \"id\": \"676b42852d236c3cc8cef8e6\",\n                \"createdAt\": \"2024-12-24T23:23:49.139Z\",\n                \"updatedAt\": \"2024-12-24T23:23:49.139Z\",\n                \"isActive\": true,\n                \"version\": 1,\n                \"parentId\": \"676b42852d236c3cc8cef8e2\",\n                \"userId\": \"67694aaeec1886f9f9ba85ed\",\n                \"content\": \"This is subpost 2\",\n                \"media\": [\n                    {\n                        \"type\": \"image\",\n                        \"url\": \"https://example.com/subpost2.jpg\",\n                        \"size\": 0\n                    }\n                ],\n                \"reactionCounts\": {},\n                \"commentCount\": 0,\n                \"order\": 2\n            }\n        ]\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"This is a comment\",\n\t\"postId\": \"post_id_here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments"
							]
						},
						"description": "Create a new comment"
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Updated comment content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "comment_id_here"
								}
							]
						},
						"description": "Update an existing comment"
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/comments/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "comment_id_here"
								}
							]
						},
						"description": "Delete a comment"
					},
					"response": []
				},
				{
					"name": "List Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/comments?postId=post_id_here&limit=10&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "postId",
									"value": "post_id_here"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "List comments for a post with pagination"
					},
					"response": []
				}
			]
		},
		{
			"name": "Reactions",
			"item": [
				{
					"name": "Create or Update Reaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"like\",\n\t\"postId\": \"post_id_here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/reactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reactions"
							]
						},
						"description": "Create or update a reaction on a post"
					},
					"response": []
				},
				{
					"name": "Delete Reaction",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reactions/:postId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reactions",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "post_id_here"
								}
							]
						},
						"description": "Delete a reaction from a post"
					},
					"response": []
				},
				{
					"name": "List Reactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/reactions?postId=post_id_here&limit=10&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"reactions"
							],
							"query": [
								{
									"key": "postId",
									"value": "post_id_here"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "List reactions for a post with pagination"
					},
					"response": []
				}
			]
		},
		{
			"name": "File Upload",
			"item": [
				{
					"name": "Upload File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has file URL\", function () {",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.expect(jsonData.file.file_url).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"upload"
							]
						},
						"description": "Upload a file to Firebase Storage"
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api"
					]
				},
				"description": "Check the health status of the server and its services"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Check if access token is expired and refresh if needed",
					"const accessToken = pm.environment.get(\"access_token\");",
					"const refreshToken = pm.environment.get(\"refresh_token\");",
					"",
					"if (!accessToken && refreshToken) {",
					"    const refreshRequest = {",
					"        url: pm.environment.get(\"base_url\") + \"/api/auth/refresh\",",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/json'",
					"        },",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({ refresh_token: refreshToken })",
					"        }",
					"    };",
					"",
					"    pm.sendRequest(refreshRequest, function (err, res) {",
					"        if (!err && res.code === 200) {",
					"            const jsonData = res.json();",
					"            if (jsonData.access_token) {",
					"                pm.environment.set(\"access_token\", jsonData.access_token);",
					"            }",
					"            if (jsonData.refresh_token) {",
					"                pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
					"            }",
					"        }",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		}
	]
}