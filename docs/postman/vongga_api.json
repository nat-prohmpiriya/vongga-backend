{
	"info": {
		"_postman_id": "b5b9b9b0-5b5b-4b5b-9b5b-b9b0b9b0b9b0",
		"name": "Vongga Platform API",
		"description": "API collection for Vongga Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/health",
					"host": ["{{base_url}}"],
					"path": ["api", "health"]
				},
				"description": "Check the health status of the server and its services"
			}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.access_token) {",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"}",
									"if (jsonData.refresh_token) {",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    pm.expect(jsonData.access_token).to.exist;",
									"});",
									"",
									"pm.test(\"Response has refresh token\", function () {",
									"    pm.expect(jsonData.refresh_token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user@example.com\",\n\t\"password\": \"your_password\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Login with email and password"
					}
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.access_token) {",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"}",
									"if (jsonData.refresh_token) {",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has new access token\", function () {",
									"    pm.expect(jsonData.access_token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "refresh"]
						},
						"description": "Get a new access token using refresh token"
					}
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.environment.unset(\"access_token\");",
									"    pm.environment.unset(\"refresh_token\");",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Tokens are cleared\", function () {",
									"    pm.expect(pm.environment.get(\"access_token\")).to.be.undefined;",
									"    pm.expect(pm.environment.get(\"refresh_token\")).to.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "logout"]
						},
						"description": "Logout and invalidate the current session"
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create or Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"John Doe\",\n\t\"email\": \"john@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": ["{{base_url}}"],
							"path": ["api", "users"]
						},
						"description": "Create or update user profile"
					}
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.expect(jsonData.user).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "profile"]
						},
						"description": "Get the current user's profile"
					}
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Create Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"This is a test post\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/image.jpg\"\n\t\t}\n\t],\n\t\"tags\": [\"test\", \"example\"],\n\t\"location\": {\n\t\t\"latitude\": 13.7563,\n\t\t\"longitude\": 100.5018,\n\t\t\"name\": \"Bangkok\"\n\t},\n\t\"visibility\": \"public\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"]
						},
						"description": "Create a new post"
					}
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Updated post content\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/updated-image.jpg\"\n\t\t}\n\t],\n\t\"tags\": [\"updated\", \"test\"],\n\t\"location\": {\n\t\t\"latitude\": 13.7563,\n\t\t\"longitude\": 100.5018,\n\t\t\"name\": \"Bangkok\"\n\t},\n\t\"visibility\": \"public\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "post_id_here"
								}
							]
						},
						"description": "Update an existing post"
					}
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "post_id_here"
								}
							]
						},
						"description": "Delete a post"
					}
				},
				{
					"name": "Get Post",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "post_id_here"
								}
							]
						},
						"description": "Get a single post by ID"
					}
				},
				{
					"name": "List Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts?limit=10&offset=0",
							"host": ["{{base_url}}"],
							"path": ["api", "posts"],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "List all posts with pagination"
					}
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"This is a comment\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/image.jpg\"\n\t\t}\n\t],\n\t\"replyTo\": \"comment_id_here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/:postId/comments",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", ":postId", "comments"],
							"variable": [
								{
									"key": "postId",
									"value": "post_id_here"
								}
							]
						},
						"description": "Create a new comment on a post"
					}
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Updated comment content\",\n\t\"media\": [\n\t\t{\n\t\t\t\"type\": \"image\",\n\t\t\t\"url\": \"https://example.com/updated-image.jpg\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "comments", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "comment_id_here"
								}
							]
						},
						"description": "Update an existing comment"
					}
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/comments/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "comments", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "comment_id_here"
								}
							]
						},
						"description": "Delete a comment"
					}
				},
				{
					"name": "Get Comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/comments/:id",
							"host": ["{{base_url}}"],
							"path": ["api", "comments", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "comment_id_here"
								}
							]
						},
						"description": "Get a single comment by ID"
					}
				},
				{
					"name": "List Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/:postId/comments?limit=10&offset=0",
							"host": ["{{base_url}}"],
							"path": ["api", "posts", ":postId", "comments"],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "postId",
									"value": "post_id_here"
								}
							]
						},
						"description": "List all comments on a post with pagination"
					}
				}
			]
		},
		{
			"name": "File Upload",
			"item": [
				{
					"name": "Upload File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has file URL\", function () {",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.expect(jsonData.file.file_url).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/upload",
							"host": ["{{base_url}}"],
							"path": ["api", "upload"]
						},
						"description": "Upload a file to Firebase Storage"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Check if access token is expired and refresh if needed",
					"const accessToken = pm.environment.get(\"access_token\");",
					"const refreshToken = pm.environment.get(\"refresh_token\");",
					"",
					"if (!accessToken && refreshToken) {",
					"    const refreshRequest = {",
					"        url: pm.environment.get(\"base_url\") + \"/api/auth/refresh\",",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/json'",
					"        },",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({ refresh_token: refreshToken })",
					"        }",
					"    };",
					"",
					"    pm.sendRequest(refreshRequest, function (err, res) {",
					"        if (!err && res.code === 200) {",
					"            const jsonData = res.json();",
					"            if (jsonData.access_token) {",
					"                pm.environment.set(\"access_token\", jsonData.access_token);",
					"            }",
					"            if (jsonData.refresh_token) {",
					"                pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
					"            }",
					"        }",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		}
	]
}
